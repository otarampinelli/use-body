{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import { IncomingMessage, ServerResponse } from \"node:http\";\nimport querystring from \"node:querystring\";\n\ninterface RequestInterface extends IncomingMessage {\n  body: any;\n}\n\nfunction useBody(\n  req: RequestInterface,\n  res: ServerResponse,\n  next: () => {},\n  type = \"json\"\n) {\n  let data = \"\";\n  req.on(\"data\", (chunk) => {\n    data += chunk;\n  });\n\n  req.on(\"end\", () => {\n    try {\n      switch (type) {\n        case \"json\":\n          req.body = JSON.parse(data);\n          break;\n        case \"urlencoded\":\n          req.body = querystring.parse(data);\n          break;\n        case \"text\":\n          req.body = data;\n          break;\n        default:\n          req.body = {};\n      }\n    } catch (err) {\n      req.body = {};\n      throw new Error(\"Error to parse body data!\");\n    }\n    next();\n  });\n}\n\nexport default useBody;\n"],"mappings":";AACA,OAAO,iBAAiB;AAMxB,SAAS,QACP,KACA,KACA,MACA,OAAO,QACP;AACA,MAAI,OAAO;AACX,MAAI,GAAG,QAAQ,CAAC,UAAU;AACxB,YAAQ;AAAA,EACV,CAAC;AAED,MAAI,GAAG,OAAO,MAAM;AAClB,QAAI;AACF,cAAQ,MAAM;AAAA,QACZ,KAAK;AACH,cAAI,OAAO,KAAK,MAAM,IAAI;AAC1B;AAAA,QACF,KAAK;AACH,cAAI,OAAO,YAAY,MAAM,IAAI;AACjC;AAAA,QACF,KAAK;AACH,cAAI,OAAO;AACX;AAAA,QACF;AACE,cAAI,OAAO,CAAC;AAAA,MAChB;AAAA,IACF,SAAS,KAAK;AACZ,UAAI,OAAO,CAAC;AACZ,YAAM,IAAI,MAAM,2BAA2B;AAAA,IAC7C;AACA,SAAK;AAAA,EACP,CAAC;AACH;AAEA,IAAO,cAAQ;","names":[]}